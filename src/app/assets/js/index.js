"use strict";class r{constructor(t,o,a="",s="POST",n=void 0){this.opcode=t,this.blockType=o,this.text=c.getMessage(this.opcode)==="NoTranslation"?a:c.getMessage(this.opcode),this.serve_method=s,this.arguments=n}async requestHandler(t,o="POST",a=void 0){try{const s=await(await fetch(`http${h.robomaster_api.env==="production"?"s":""}://${h.robomaster_api.host()}:${h.robomaster_api.port()}/${t}`,{method:o,headers:{"Content-Type":"application/json"},body:JSON.stringify(a||{})})).json();return console.log(s),s}catch(s){console.error(`Erreur lors de la requ\xEAte ${t}:`,s)}}async run(t,o){return await this.requestHandler(`${t}/${this.opcode}`,this.serve_method,o)}}const L="robomaster_turbowarp_extension",U="0.0.1",j={message:"RobomasterBasics",description:"name of tab"},W={message:"Start [sn]",description:"text on block"},F={message:"Stop",description:"text on block"},q={message:["SNX00"],description:"text in menu"},z={message:"Armor",description:"name of tab"},H={message:"Chassis",description:"name of tab"},X={message:"Move x: [x]m y: [y]m z: [z]m speed: [speed]m/s",description:"text on block"},Y={message:"Rotate angle: [angle]\xB0",description:"text on block"},Z={message:"set [pwm] output to [value]%",description:"text on block"},J={message:"[status] chassis acceleration",description:"text on block"},K={message:"set chassis to follow gimbal at [degree]\xB0",description:"text on block"},Q={message:"set chassis translation speed to [speed]m/s",description:"text on block"},ee={message:"set chassis rotation speed to [speed]\xB0/s",description:"text on block"},te={message:"set wheel rotation speed (rpm) to front-left [fl] front-right [fr] rear-left [rl] rear-right [rr]",description:"text on block"},oe={message:"set chassis to translate at [degree]\xB0 for [time]s",description:"text on block"},re={message:"set chassis to translate at [degree]\xB0 for [distance]m",description:"text on block"},se={message:"set chassis to translate [degree]\xB0 at [speed]m/s",description:"text on block"},ae={message:"set chassis to rotate [direction] for [time]s",description:"text on block"},ne={message:"set chassis to rotate [direction] for [degree]\xB0",description:"text on block"},ce={message:"set robot to translate towards chassis front at [degree]\xB0 and rotate [direction]",description:"text on block"},ie={message:"set robot to translate at [xspeed]m/s along X axis and [yspeed] along Y axis and rotate along Z axis at [rotation]\xB0/s",description:"text on block"},le={message:"chassis [attitude] axis attitude angle",description:"text on block"},ue={message:"current chassis position [action]",description:"text on block"},pe={message:"when chassis hits an obstacle",description:"text on block"},de={message:"chassis hits an obstacle",description:"text on block"},me={message:["PWP_all","PWP_1","PWP_2","PWP_3","PWP_4","PWP_5","PWP_6"],description:"text in menu"},fe={message:["Enable","Disable"],description:"text in menu"},ge={message:["right","left"],description:"text in menu"},he={message:["yaw","pitch","roll"],description:"text in menu"},ye={message:["orientation","X coordinate","Y coordinate","Z coordinate"],description:"text in menu"},Se={message:"ExtensionModule",description:"name of tab"},Te={message:"Move arm to [position]",description:"text on block"},be={message:"Grabber [action]",description:"text on block"},Ae={message:"set gripper to [action]",description:"text on block"},Oe={message:"move arm [direction] distance:[distance]mm",description:"text on block"},Me={message:"move arm to (X:[x] Y:[y])",description:"text on block"},Ne={message:["open","close","stop"],description:"text in menu"},Pe={message:["up","down"],description:"text in menu"},ke={message:["forward","backward","up","bottom"],description:"text in menu"},we={message:"LedEffects",description:"name of tab"},xe={message:"set [led] LED flash rate to [frequency]Hz",description:"text on block"},Re={message:"set chassis [led] LED color to [color] and effect to [effect]",description:"text on block"},ve={message:"set gimbal [led] LED color to [color] and effect to [effect]",description:"text on block"},Be={message:"set gimbal [led] LED sequence to [index] and effect to [effect]",description:"text on block"},Ee={message:"set gimbal [led] LED color to [color]",description:"text on block"},De={message:["all","bottom front","bottom back","bottom left","bottom right","top left","top right"],description:"text in menu"},_e={message:["bottom all","bottom front","bottom back","bottom left","bottom right"],description:"text in menu"},Ve={message:["top all","top left","top right"],description:"text in menu"},Ce={message:["red","green","blue","yellow","cyan","purple","white"],description:"text in menu"},Ie={message:["solid","breath","flash","off"],description:"text in menu"},$e={message:"Media",description:"name of tab"},Ge={message:"Say [say]",description:"text on block"},Le={message:"Sensor",description:"name of tab"},Ue={message:"SensorAdapter",description:"name of tab"},je={message:"Smart",description:"name of tab"},We={RobomasterBasics:j,start:W,stop:F,sn:q,Armor:z,Chassis:H,move:X,rotate:Y,setPwmValue:Z,enableStickOverlay:J,setFollowGimbalOffset:K,setTransSpeed:Q,setRotateSpeed:ee,setWheelSpeed:te,moveWithTime:oe,moveWithDistance:re,moveDegreeWithSpeed:se,rotateWithTime:ae,rotateWithDegree:ne,moveAndRotate:ce,moveWithSpeed:ie,getAttitude:le,getPositionBasePowerOn:ue,chassisImpactDetection:pe,isImpact:de,pwm_port:me,status:fe,direction:ge,attitude:he,action:ye,ExtensionModule:Se,arm:Te,grabber:be,setGripper:Ae,armMove:Oe,armMoveTo:Me,gripperActions:Ne,armPositions:Pe,armDirection:ke,LedEffects:we,setFlash:xe,setBottomLed:Re,setTopLed:ve,setSignleLed:Be,turnOff:Ee,armorFlash:De,armorBottomLed:_e,armorTopLed:Ve,color:Ce,effect:Ie,Media:$e,say:Ge,Sensor:Le,SensorAdapter:Ue,Smart:je},Fe={message:"RobomasterBases",description:"name of tab"},qe={message:"D\xE9marrer",description:"text on block"},ze={message:"Stopper",description:"text on block"},He={message:["192.168.0.2"],description:"text in menu"},Xe={message:"Armure",description:"name of tab"},Ye={message:"Chassis",description:"name of tab"},Ze={message:"Se d\xE9placer de x: [x]m y: [y]m z: [z]m speed: [speed]m/s",description:"text on block"},Je={message:"Tourner d'un angle: [angle]\xB0",description:"text on block"},Ke={message:"r\xE9gler [pwm] la sortie pwm \xE0 [value]%",description:"text on block"},Qe={message:"[status] acc\xE9l\xE9ration du chassis",description:"text on block"},et={message:"Suivre un stabilisateur [degree]\xB0",description:"text on block"},tt={message:"Vitesse de translation [speed]m/s",description:"text on block"},ot={message:"Vitesse de rotation [speed]\xB0/s",description:"text on block"},rt={message:"vitesse de rotation des roues (rpm) avant gauche [fl] avant droit [fr] arri\xE8re gauche [rl] arri\xE8re droit [rr]",description:"text on block"},st={message:"se d\xE9placer \xE0 [degree]\xB0 pour [time]s",description:"text on block"},at={message:"se d\xE9placer \xE0 [degree]\xB0 sur [distance]m",description:"text on block"},nt={message:"se d\xE9placer \xE0 [degree]\xB0 \xE0 [speed]m/s",description:"text on block"},ct={message:"tourner [direction] pendant [time]s",description:"text on block"},it={message:"tourner [direction] \xE0 [degree]\xB0",description:"text on block"},lt={message:"Avancer de [degree]\xB0 en tournant \xE0 [direction]",description:"text on block"},ut={message:"Se d\xE9placer \xE0 [xspeed]m/s sur l'axe X et \xE0 [yspeed] sur l'axe Y et tourne sur l'axe Z \xE0 [rotation]\xB0/s",description:"text on block"},pt={message:"Attitude de l'angle [attitude]",description:"text on block"},dt={message:"Position courante [action]",description:"text on block"},mt={message:"Impact d\xE9tect\xE9 ?",description:"text on block"},ft={message:"collision ?",description:"text on block"},gt={message:["PWP_all","PWP_1","PWP_2","PWP_3","PWP_4","PWP_5","PWP_6"],description:"text in menu"},ht={message:["Activ\xE9","D\xE9sactiv\xE9"],description:"text in menu"},yt={message:["droite","gauche"],description:"text in menu"},St={message:["perdu","terrain","rouler"],description:"text in menu"},Tt={message:["orientation","coordonn\xE9e X","coordonn\xE9e Y","coordonn\xE9e Z"],description:"text in menu"},bt={message:"ModuleExtension",description:"name of tab"},At={message:"Bouger le bras vers le [position]",description:"text on block"},Ot={message:"Pince [action]",description:"text on block"},Mt={message:"Pince [action]",description:"text on block"},Nt={message:"bouger le bras vers le [direction] de [distance]mm",description:"text on block"},Pt={message:"bouger le bras au coordonn\xE9es (X:[x] Y:[y])",description:"text on block"},kt={message:["ouverte","ferm\xE9e","stopp\xE9e"],description:"text in menu"},wt={message:["haut","bas"],description:"text in menu"},xt={message:["avant","arri\xE8re","haut","bas"],description:"text in menu"},Rt={message:"EffetsDeLeds",description:"name of tab"},vt={message:"set [led] LED flash rate to [frequency]Hz",description:"text on block"},Bt={message:"set chassis [led] LED color to [color] and effect to [effect]",description:"text on block"},Et={message:"set gimbal [led] LED color to [color] and effect to [effect]",description:"text on block"},Dt={message:"set gimbal [led] LED sequence to [index] and effect to [effect]",description:"text on block"},_t={message:"set gimbal [led] LED color to [color]",description:"text on block"},Vt={message:["all","bottom front","bottom back","bottom left","bottom right","top left","top right"],description:"text in menu"},Ct={message:["bottom all","bottom front","bottom back","bottom left","bottom right"],description:"text in menu"},It={message:["top all","top left","top right"],description:"text in menu"},$t={message:["red","green","blue","yellow","cyan","purple","white"],description:"text in menu"},Gt={message:["solid","breath","flash","off"],description:"text in menu"},Lt={message:"Media",description:"name of tab"},Ut={message:"Say [say]",description:"text on block"},jt={message:"Capteurs",description:"name of tab"},Wt={message:"AdapteurCapteurs",description:"name of tab"},Ft={message:"Intelligence",description:"name of tab"},qt={RobomasterBasics:Fe,start:qe,stop:ze,robotIp:He,Armor:Xe,Chassis:Ye,move:Ze,rotate:Je,setPwmValue:Ke,enableStickOverlay:Qe,setFollowGimbalOffset:et,setTransSpeed:tt,setRotateSpeed:ot,setWheelSpeed:rt,moveWithTime:st,moveWithDistance:at,moveDegreeWithSpeed:nt,rotateWithTime:ct,rotateWithDegree:it,moveAndRotate:lt,moveWithSpeed:ut,getAttitude:pt,getPositionBasePowerOn:dt,chassisImpactDetection:mt,isImpact:ft,pwm_port:gt,status:ht,direction:yt,attitude:St,action:Tt,ExtensionModule:bt,arm:At,grabber:Ot,setGripper:Mt,armMove:Nt,armMoveTo:Pt,gripperActions:kt,armPositions:wt,armDirection:xt,LedEffects:Rt,setFlash:vt,setBottomLed:Bt,setTopLed:Et,setSignleLed:Dt,turnOff:_t,armorFlash:Vt,armorBottomLed:Ct,armorTopLed:It,color:$t,effect:Gt,Media:Lt,say:Ut,Sensor:jt,SensorAdapter:Wt,Smart:Ft};class zt{constructor(t="en"){this.lang=t,this.available_language={en:We,fr:qt},this.translations=this.available_language[this.lang]}getMessage(t){return t in this.translations?this.translations[t].message:"NoTranslation"}generate_template(){const t={};for(const[o,a]of Object.entries(h.tabs)){if(t[o]={message:this.getMessage(o),description:"name of tab"},a.blocks.length!==0)for(const s of a.blocks)t[s.opcode]={message:s.text,description:"text on block"};if("menus"in a)for(const[s,n]of Object.entries(a.menus))t[s]={message:n,description:"text in menu"}}return((o,a)=>{const s=new Blob([JSON.stringify(o,null,2)],{type:"application/json"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=`${a}.json`,i.click(),URL.revokeObjectURL(n)})(t,`messages.${this.lang}.template`)}}const c=new zt,h={name:L,version:U,robomaster_api:{env:"production",host:function(){return this.env==="production"?"10.42.0.1":"localhost"},port:function(){return this.env==="production"?443:8e3}},tabs:{RobomasterBasics:{color:"#202530",blocks:[new r("start",Scratch.BlockType.COMMAND,"Start [sn]","POST",{sn:{type:Scratch.ArgumentType.STRING,menu:"sn",defaultValue:"XF00"}}),new r("stop",Scratch.BlockType.COMMAND)],menus:{sn:["XF00"]}},Armor:{color:"#F5C343",blocks:[new r("setArmorSensitivity",Scratch.BlockType.COMMAND,"d\xE9finir la sensibilit\xE9 de l'armure \xE0 [sensitivity]","POST",{sensitivity:{type:Scratch.ArgumentType.NUMBER,defaultValue:5}}),new r("armorHit",Scratch.BlockType.EVENT,"quand l'armure [armor] est touch\xE9e","POST",{armor:{type:Scratch.ArgumentType.STRING,menu:"armorPosition",defaultValue:"al\xE9atoire"}}),new r("getLastHitArmor",Scratch.BlockType.REPORTER,"[info] de la derni\xE8re armure touch\xE9e","POST",{info:{type:Scratch.ArgumentType.STRING,menu:"armorInfo",defaultValue:"ID"}}),new r("isArmorHit",Scratch.BlockType.BOOLEAN,"armure [armor] touch\xE9e","POST",{armor:{type:Scratch.ArgumentType.STRING,menu:"armorPosition",defaultValue:"al\xE9atoire"}}),new r("waitUntilArmorHit",Scratch.BlockType.COMMAND,"attendre un impact sur l'armure [armor]","POST",{armor:{type:Scratch.ArgumentType.STRING,menu:"armorPosition",defaultValue:"al\xE9atoire"}}),new r("irHit",Scratch.BlockType.EVENT,"Lorsqu'un robot est touch\xE9 par un faisceau infrarouge","POST"),new r("isIrHit",Scratch.BlockType.BOOLEAN,"robot touch\xE9 par un faisceau infrarouge","POST"),new r("waitUntilIrHit",Scratch.BlockType.COMMAND,"Attendez que le robot soit touch\xE9 par un faisceau infrarouge","POST")],menus:{armorPosition:["al\xE9atoire","avant","arri\xE8re","gauche","droite"],armorInfo:["ID","temps"]}},Chassis:{color:"#651FFF",blocks:[new r("move",Scratch.BlockType.COMMAND,"","POST",{x:{type:Scratch.ArgumentType.NUMBER,defaultValue:1},y:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},z:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},speed:{type:Scratch.ArgumentType.NUMBER,defaultValue:.5}}),new r("rotate",Scratch.BlockType.COMMAND,"","POST",{angle:{type:Scratch.ArgumentType.NUMBER,defaultValue:90}}),new r("setPwmValue",Scratch.BlockType.COMMAND,"set [pwm] output to [value]%","POST",{pwm:{type:Scratch.ArgumentType.STRING,menu:"pwm_port",defaultValue:c.getMessage("pwm_port")[0]},value:{type:Scratch.ArgumentType.NUMBER,defaultValue:7.5}}),new r("enableStickOverlay",Scratch.BlockType.COMMAND,"[status] chassis acceleration","POST",{status:{type:Scratch.ArgumentType.STRING,menu:"status",defaultValue:c.getMessage("status")[0]}}),new r("setFollowGimbalOffset",Scratch.BlockType.COMMAND,"set chassis to follow gimbal at [degree]\xB0","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0}}),new r("setTransSpeed",Scratch.BlockType.COMMAND,"set chassis translation speed to [speed]m/s","POST",{speed:{type:Scratch.ArgumentType.NUMBER,defaultValue:0}}),new r("setRotateSpeed",Scratch.BlockType.COMMAND,"set chassis rotation speed to [speed]\xB0/s","POST",{speed:{type:Scratch.ArgumentType.NUMBER,defaultValue:30}}),new r("setWheelSpeed",Scratch.BlockType.COMMAND,"set wheel rotation speed (rpm) to front-left [fl] front-right [fr] rear-left [rl] rear-right [rr]","POST",{fl:{type:Scratch.ArgumentType.NUMBER,defaultValue:100},fr:{type:Scratch.ArgumentType.NUMBER,defaultValue:100},rl:{type:Scratch.ArgumentType.NUMBER,defaultValue:100},rr:{type:Scratch.ArgumentType.NUMBER,defaultValue:100}}),new r("move",Scratch.BlockType.COMMAND,"set chassis to translate at [degree]\xB0","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0}}),new r("moveWithTime",Scratch.BlockType.COMMAND,"set chassis to translate at [degree]\xB0 for [time]s","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},time:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("moveWithDistance",Scratch.BlockType.COMMAND,"set chassis to translate at [degree]\xB0 for [distance]m","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},distance:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("moveDegreeWithSpeed",Scratch.BlockType.COMMAND,"set chassis to translate [degree]\xB0 at [speed]m/s","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},speed:{type:Scratch.ArgumentType.NUMBER,defaultValue:.5}}),new r("rotate",Scratch.BlockType.COMMAND,"set chassis to rotate [direction]","POST",{direction:{type:Scratch.ArgumentType.STRING,menu:"direction",defaultValue:"right"}}),new r("rotateWithTime",Scratch.BlockType.COMMAND,"set chassis to rotate [direction] for [time]s","POST",{direction:{type:Scratch.ArgumentType.STRING,menu:"direction",defaultValue:"right"},time:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("rotateWithDegree",Scratch.BlockType.COMMAND,"set chassis to rotate [direction] for [degree]\xB0","POST",{direction:{type:Scratch.ArgumentType.STRING,menu:"direction",defaultValue:"right"},degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0}}),new r("moveAndRotate",Scratch.BlockType.COMMAND,"set robot to translate towards chassis front at [degree]\xB0 and rotate [direction]","POST",{degree:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},direction:{type:Scratch.ArgumentType.STRING,menu:"direction",defaultValue:"right"}}),new r("moveWithSpeed",Scratch.BlockType.COMMAND,"set robot to translate at [xspeed]m/s along X axis and [yspeed] along Y axis and rotate along Z axis at [rotation]\xB0/s","POST",{xspeed:{type:Scratch.ArgumentType.NUMBER,defaultValue:.5},yspeed:{type:Scratch.ArgumentType.NUMBER,defaultValue:.5},rotation:{type:Scratch.ArgumentType.NUMBER,defaultValue:30}}),new r("stop",Scratch.BlockType.COMMAND,"set chassis to stop moving","POST"),new r("getAttitude",Scratch.BlockType.REPORTER,"chassis [attitude] axis attitude angle","POST",{attitude:{type:Scratch.ArgumentType.STRING,menu:"attitude",defaultValue:"yaw"}}),new r("getPositionBasePowerOn",Scratch.BlockType.REPORTER,"current chassis position [action]","POST",{action:{type:Scratch.ArgumentType.STRING,menu:"action",defaultValue:"X coordinate"}}),new r("chassisImpactDetection",Scratch.BlockType.EVENT,"when chassis hits an obstacle","POST"),new r("isImpact",Scratch.BlockType.BOOLEAN,"chassis hits an obstacle","POST")],menus:{pwm_port:c.getMessage("pwm_port"),status:c.getMessage("status"),direction:c.getMessage("direction"),attitude:c.getMessage("attitude"),action:c.getMessage("action")}},ExtensionModule:{color:"#F24A88",blocks:[new r("arm",Scratch.BlockType.COMMAND,"","POST",{position:{type:Scratch.ArgumentType.STRING,menu:"armPositions",defaultValue:c.getMessage("armPositions")[0]}}),new r("grabber",Scratch.BlockType.COMMAND,"","POST",{action:{type:Scratch.ArgumentType.STRING,menu:"gripperActions",defaultValue:c.getMessage("gripperActions")[0]}}),new r("setGripper",Scratch.BlockType.COMMAND,"set gripper to [action]","POST",{action:{type:Scratch.ArgumentType.STRING,menu:"gripperActions",defaultValue:c.getMessage("gripperActions")[0]}}),new r("armMove",Scratch.BlockType.COMMAND,"move arm [direction] distance:[distance]mm","POST",{direction:{type:Scratch.ArgumentType.STRING,menu:"armDirection",defaultValue:c.getMessage("armDirection")[0]},distance:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("armMoveTo",Scratch.BlockType.COMMAND,"move arm to (X:[x] Y:[y])","POST",{x:{type:Scratch.ArgumentType.NUMBER,defaultValue:0},y:{type:Scratch.ArgumentType.NUMBER,defaultValue:0}})],menus:{gripperActions:c.getMessage("gripperActions"),armPositions:c.getMessage("armPositions"),armDirection:c.getMessage("armDirection")}},LedEffects:{color:"#58C0A6",blocks:[new r("setFlash",Scratch.BlockType.COMMAND,"set [led] LED flash rate to [frequency]Hz","POST",{led:{type:Scratch.ArgumentType.STRING,menu:"armorFlash",defaultValue:"all"},frequency:{type:Scratch.ArgumentType.NUMBER,defaultValue:2}}),new r("setBottomLed",Scratch.BlockType.COMMAND,"set chassis [led] LED color to [color] and effect to [effect]","POST",{led:{type:Scratch.ArgumentType.STRING,menu:"armorBottomLed",defaultValue:"front"},color:{type:Scratch.ArgumentType.STRING,menu:"color",defaultValue:"blue"},effect:{type:Scratch.ArgumentType.STRING,menu:"effect",defaultValue:"solid"}}),new r("setTopLed",Scratch.BlockType.COMMAND,"set gimbal [led] LED color to [color] and effect to [effect]","POST",{led:{type:Scratch.ArgumentType.STRING,menu:"armorTopLed",defaultValue:"top"},color:{type:Scratch.ArgumentType.STRING,menu:"color",defaultValue:"blue"},effect:{type:Scratch.ArgumentType.STRING,menu:"effect",defaultValue:"solid"}}),new r("setSignleLed",Scratch.BlockType.COMMAND,"set gimbal [led] LED sequence to [index] and effect to [effect]","POST",{led:{type:Scratch.ArgumentType.STRING,menu:"armorTopLed",defaultValue:"bottomall"},index:{type:Scratch.ArgumentType.NUMBER,defaultValue:1},effect:{type:Scratch.ArgumentType.STRING,menu:"effect",defaultValue:"solid"}}),new r("turnOff",Scratch.BlockType.COMMAND,"set gimbal [led] LED color to [color]","POST",{led:{type:Scratch.ArgumentType.STRING,menu:"armorTopLed",defaultValue:"top"},color:{type:Scratch.ArgumentType.STRING,menu:"color",defaultValue:"blue"}})],menus:{armorFlash:["all","bottom front","bottom back","bottom left","bottom right","top left","top right"],armorBottomLed:["bottom all","bottom front","bottom back","bottom left","bottom right"],armorTopLed:["top all","top left","top right"],color:["red","green","blue","yellow","cyan","purple","white"],effect:["solid","breath","flash","off"]}},Media:{color:"#67AD5B",blocks:[new r("say",Scratch.BlockType.COMMAND,"","POST",{say:{type:Scratch.ArgumentType.STRING,defaultValue:"Hello"}}),new r("playNote",Scratch.BlockType.COMMAND,"jouer la note [note]","POST",{note:{type:Scratch.ArgumentType.STRING,menu:"notes",defaultValue:"1C"}}),new r("playSoundEffect",Scratch.BlockType.COMMAND,"jouer un effet sonore pour [effect]","POST",{effect:{type:Scratch.ArgumentType.STRING,menu:"soundEffects",defaultValue:"impact"}}),new r("playSoundEffectUntilDone",Scratch.BlockType.COMMAND,"jouer l'effet sonore [effect] jusqu'\xE0 la fin","POST",{effect:{type:Scratch.ArgumentType.STRING,menu:"soundEffects",defaultValue:"impact"}}),new r("playCustomAudio",Scratch.BlockType.COMMAND,"Lire audio personnalis\xE9 [audio]","POST",{audio:{type:Scratch.ArgumentType.STRING,menu:"customAudio",defaultValue:"audio1"}}),new r("playCustomAudioUntilDone",Scratch.BlockType.COMMAND,"Lire audio personnalis\xE9 [audio] jusqu'\xE0 la fin","POST",{audio:{type:Scratch.ArgumentType.STRING,menu:"customAudio",defaultValue:"audio1"}}),new r("takePhoto",Scratch.BlockType.COMMAND,"prendre une photo","POST"),new r("startVideoRecording",Scratch.BlockType.COMMAND,"[action] l'enregistrement vid\xE9o","POST",{action:{type:Scratch.ArgumentType.STRING,menu:"recordingActions",defaultValue:"start"}})],menus:{notes:["1C","1D","1E","1F","1G","1A","1B","2C","2D","2E","2F","2G","2A","2B","3C","3D","3E","3F","3G","3A","3B"],soundEffects:["impact","hit","explosion","alert"],customAudio:["audio1","audio2","audio3"],recordingActions:["start","stop"]}},Sensor:{color:"#6DD700",blocks:[new r("setInfraredSensor",Scratch.BlockType.COMMAND,"capteur de distance infrarouge [status] fonctions de mesures [sensor]","POST",{sensor:{type:Scratch.ArgumentType.NUMBER,defaultValue:1},status:{type:Scratch.ArgumentType.STRING,menu:"sensorStatus",defaultValue:"activer"}}),new r("whenInfraredDistance",Scratch.BlockType.EVENT,"quand le capteur de distance infrarouge [sensor] d\xE9tecte une distance de [operator] [value] cm","POST",{sensor:{type:Scratch.ArgumentType.NUMBER,defaultValue:1},operator:{type:Scratch.ArgumentType.STRING,menu:"operators",defaultValue:">="},value:{type:Scratch.ArgumentType.NUMBER,defaultValue:10}}),new r("waitUntilInfraredDistance",Scratch.BlockType.COMMAND,"attendez que la valeur de distance [operator] [value] cm du capteur de distance infrarouge [sensor]","POST",{operator:{type:Scratch.ArgumentType.STRING,menu:"operators",defaultValue:">="},value:{type:Scratch.ArgumentType.NUMBER,defaultValue:10},sensor:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("isInfraredDistance",Scratch.BlockType.BOOLEAN,"valeur de distance [operator] [value] cm du capteur de distance infrarouge [sensor]","POST",{operator:{type:Scratch.ArgumentType.STRING,menu:"operators",defaultValue:">="},value:{type:Scratch.ArgumentType.NUMBER,defaultValue:10},sensor:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("getInfraredDistance",Scratch.BlockType.REPORTER,"capteur de distance infrarouge [sensor] valeur de distance","POST",{sensor:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}})],menus:{sensorStatus:["activer","d\xE9sactiver"],operators:[">=","<=","="]}},SensorAdapter:{color:"#00c87e",blocks:[]},Smart:{color:"#F19D38",blocks:[new r("setClapsDetection",Scratch.BlockType.COMMAND,"[status] la d\xE9tection des applaudissements","POST",{status:{type:Scratch.ArgumentType.STRING,menu:"status",defaultValue:"activ\xE9"}}),new r("setExposureValue",Scratch.BlockType.COMMAND,"d\xE9finir la valeur d'exposition \xE0 [exposure]","POST",{exposure:{type:Scratch.ArgumentType.STRING,menu:"exposureValues",defaultValue:"\xE9lev\xE9e"}}),new r("whenRobotIdentifies",Scratch.BlockType.EVENT,"quand le robot identifie [target]","POST",{target:{type:Scratch.ArgumentType.STRING,menu:"identificationTargets",defaultValue:"personnes"}}),new r("whenRobotIdentifiesClaps",Scratch.BlockType.EVENT,"quand le robot identifie [claps]","POST",{claps:{type:Scratch.ArgumentType.STRING,menu:"clapTypes",defaultValue:"2 applaudissements"}}),new r("enableIdentification",Scratch.BlockType.COMMAND,"[action] l'identification de [feature]","POST",{action:{type:Scratch.ArgumentType.STRING,menu:"actionTypes",defaultValue:"activer"},feature:{type:Scratch.ArgumentType.STRING,menu:"featureTypes",defaultValue:"marqueurs visuels"}}),new r("setMarkerIdentificationDistance",Scratch.BlockType.COMMAND,"d\xE9finir la distance d'identification des marqueurs visuels \xE0 [distance] m","POST",{distance:{type:Scratch.ArgumentType.NUMBER,defaultValue:1}}),new r("setMarkerColor",Scratch.BlockType.COMMAND,"d\xE9finir [color] comme couleur d'identification du marqueur visuel","POST",{color:{type:Scratch.ArgumentType.STRING,menu:"markerColors",defaultValue:"rouge"}}),new r("setLineColor",Scratch.BlockType.COMMAND,"d\xE9finir le [color] comme la couleur d'identification de la ligne","POST",{color:{type:Scratch.ArgumentType.STRING,menu:"lineColors",defaultValue:"bleu"}}),new r("getMarkerInfo",Scratch.BlockType.REPORTER,"infos sur le marqueur visuel identifi\xE9","POST"),new r("getPersonInfo",Scratch.BlockType.REPORTER,"infos sur [target] identifi\xE9(e)","POST",{target:{type:Scratch.ArgumentType.STRING,menu:"personTypes",defaultValue:"personnes"}}),new r("getGestureInfo",Scratch.BlockType.REPORTER,"infos sur le geste identifi\xE9","POST"),new r("getLineInfo",Scratch.BlockType.REPORTER,"infos sur la ligne identifi\xE9e","POST"),new r("getLinesInfo",Scratch.BlockType.REPORTER,"infos sur les lignes identifi\xE9es","POST"),new r("getCurrentBrightness",Scratch.BlockType.REPORTER,"luminosit\xE9 actuelle","POST"),new r("getAimingPosition",Scratch.BlockType.REPORTER,"position de vis\xE9e","POST"),new r("waitUntilIdentifies",Scratch.BlockType.COMMAND,"attendre jusqu'\xE0 l'identification de [target]","POST",{target:{type:Scratch.ArgumentType.STRING,menu:"waitTargets",defaultValue:"personnes"}}),new r("waitUntilClaps",Scratch.BlockType.COMMAND,"attendre jusqu'\xE0 l'identification de [claps]","POST",{claps:{type:Scratch.ArgumentType.STRING,menu:"clapTypes",defaultValue:"2 applaudissements"}})],menus:{exposureValues:["\xE9lev\xE9e","moyenne","basse"],targetTypes:["coeur rouge","cercle bleu","triangle vert"],identificationTargets:["personnes","marqueurs visuels","gestes"],clapTypes:["2 applaudissements","1 applaudissement","3 applaudissements"],actionTypes:["activer","d\xE9sactiver"],featureTypes:["marqueurs visuels","lignes","applaudissements"],markerColors:["rouge","vert","bleu","jaune"],lineColors:["bleu","rouge","vert","jaune"],personTypes:["personnes","robots S1"],waitTargets:["personnes","marqueurs visuels","gestes"]}}}};var Ht=typeof global=="object"&&global&&global.Object===Object&&global,Xt=typeof self=="object"&&self&&self.Object===Object&&self,M=Ht||Xt||Function("return this")(),m=M.Symbol,V=Object.prototype,Yt=V.hasOwnProperty,Zt=V.toString,g=m?m.toStringTag:void 0;function Jt(e){var t=Yt.call(e,g),o=e[g];try{e[g]=void 0;var a=!0}catch{}var s=Zt.call(e);return a&&(t?e[g]=o:delete e[g]),s}var Kt=Object.prototype,Qt=Kt.toString;function eo(e){return Qt.call(e)}var to="[object Null]",oo="[object Undefined]",R=m?m.toStringTag:void 0;function C(e){return e==null?e===void 0?oo:to:R&&R in Object(e)?Jt(e):eo(e)}function ro(e){return e!=null&&typeof e=="object"}var so="[object Symbol]";function N(e){return typeof e=="symbol"||ro(e)&&C(e)==so}function ao(e,t){for(var o=-1,a=e==null?0:e.length,s=Array(a);++o<a;)s[o]=t(e[o],o,e);return s}var P=Array.isArray,v=m?m.prototype:void 0,B=v?v.toString:void 0;function I(e){if(typeof e=="string")return e;if(P(e))return ao(e,I)+"";if(N(e))return B?B.call(e):"";var t=e+"";return t=="0"&&1/e==-1/0?"-0":t}function T(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}var no="[object AsyncFunction]",co="[object Function]",io="[object GeneratorFunction]",lo="[object Proxy]";function uo(e){if(!T(e))return!1;var t=C(e);return t==co||t==io||t==no||t==lo}var O=M["__core-js_shared__"],E=function(){var e=/[^.]+$/.exec(O&&O.keys&&O.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}();function po(e){return!!E&&E in e}var mo=Function.prototype,fo=mo.toString;function go(e){if(e!=null){try{return fo.call(e)}catch{}try{return e+""}catch{}}return""}var ho=/[\\^$.*+?()[\]{}|]/g,yo=/^\[object .+?Constructor\]$/,So=Function.prototype,To=Object.prototype,bo=So.toString,Ao=To.hasOwnProperty,Oo=RegExp("^"+bo.call(Ao).replace(ho,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function Mo(e){if(!T(e)||po(e))return!1;var t=uo(e)?Oo:yo;return t.test(go(e))}function No(e,t){return e?.[t]}function k(e,t){var o=No(e,t);return Mo(o)?o:void 0}var D=function(){try{var e=k(Object,"defineProperty");return e({},"",{}),e}catch{}}(),Po=9007199254740991,ko=/^(?:0|[1-9]\d*)$/;function wo(e,t){var o=typeof e;return t=t??Po,!!t&&(o=="number"||o!="symbol"&&ko.test(e))&&e>-1&&e%1==0&&e<t}function xo(e,t,o){t=="__proto__"&&D?D(e,t,{configurable:!0,enumerable:!0,value:o,writable:!0}):e[t]=o}function $(e,t){return e===t||e!==e&&t!==t}var Ro=Object.prototype,vo=Ro.hasOwnProperty;function Bo(e,t,o){var a=e[t];(!(vo.call(e,t)&&$(a,o))||o===void 0&&!(t in e))&&xo(e,t,o)}var Eo=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,Do=/^\w*$/;function _o(e,t){if(P(e))return!1;var o=typeof e;return o=="number"||o=="symbol"||o=="boolean"||e==null||N(e)?!0:Do.test(e)||!Eo.test(e)||t!=null&&e in Object(t)}var y=k(Object,"create");function Vo(){this.__data__=y?y(null):{},this.size=0}function Co(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var Io="__lodash_hash_undefined__",$o=Object.prototype,Go=$o.hasOwnProperty;function Lo(e){var t=this.__data__;if(y){var o=t[e];return o===Io?void 0:o}return Go.call(t,e)?t[e]:void 0}var Uo=Object.prototype,jo=Uo.hasOwnProperty;function Wo(e){var t=this.__data__;return y?t[e]!==void 0:jo.call(t,e)}var Fo="__lodash_hash_undefined__";function qo(e,t){var o=this.__data__;return this.size+=this.has(e)?0:1,o[e]=y&&t===void 0?Fo:t,this}function u(e){var t=-1,o=e==null?0:e.length;for(this.clear();++t<o;){var a=e[t];this.set(a[0],a[1])}}u.prototype.clear=Vo,u.prototype.delete=Co,u.prototype.get=Lo,u.prototype.has=Wo,u.prototype.set=qo;function zo(){this.__data__=[],this.size=0}function b(e,t){for(var o=e.length;o--;)if($(e[o][0],t))return o;return-1}var Ho=Array.prototype,Xo=Ho.splice;function Yo(e){var t=this.__data__,o=b(t,e);if(o<0)return!1;var a=t.length-1;return o==a?t.pop():Xo.call(t,o,1),--this.size,!0}function Zo(e){var t=this.__data__,o=b(t,e);return o<0?void 0:t[o][1]}function Jo(e){return b(this.__data__,e)>-1}function Ko(e,t){var o=this.__data__,a=b(o,e);return a<0?(++this.size,o.push([e,t])):o[a][1]=t,this}function f(e){var t=-1,o=e==null?0:e.length;for(this.clear();++t<o;){var a=e[t];this.set(a[0],a[1])}}f.prototype.clear=zo,f.prototype.delete=Yo,f.prototype.get=Zo,f.prototype.has=Jo,f.prototype.set=Ko;var Qo=k(M,"Map");function er(){this.size=0,this.__data__={hash:new u,map:new(Qo||f),string:new u}}function tr(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function A(e,t){var o=e.__data__;return tr(t)?o[typeof t=="string"?"string":"hash"]:o.map}function or(e){var t=A(this,e).delete(e);return this.size-=t?1:0,t}function rr(e){return A(this,e).get(e)}function sr(e){return A(this,e).has(e)}function ar(e,t){var o=A(this,e),a=o.size;return o.set(e,t),this.size+=o.size==a?0:1,this}function p(e){var t=-1,o=e==null?0:e.length;for(this.clear();++t<o;){var a=e[t];this.set(a[0],a[1])}}p.prototype.clear=er,p.prototype.delete=or,p.prototype.get=rr,p.prototype.has=sr,p.prototype.set=ar;var nr="Expected a function";function w(e,t){if(typeof e!="function"||t!=null&&typeof t!="function")throw new TypeError(nr);var o=function(){var a=arguments,s=t?t.apply(this,a):a[0],n=o.cache;if(n.has(s))return n.get(s);var i=e.apply(this,a);return o.cache=n.set(s,i)||n,i};return o.cache=new(w.Cache||p),o}w.Cache=p;var cr=500;function ir(e){var t=w(e,function(a){return o.size===cr&&o.clear(),a}),o=t.cache;return t}var lr=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ur=/\\(\\)?/g,pr=ir(function(e){var t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(lr,function(o,a,s,n){t.push(s?n.replace(ur,"$1"):a||o)}),t});function dr(e){return e==null?"":I(e)}function mr(e,t){return P(e)?e:_o(e,t)?[e]:pr(dr(e))}function fr(e){if(typeof e=="string"||N(e))return e;var t=e+"";return t=="0"&&1/e==-1/0?"-0":t}function gr(e,t,o,a){if(!T(e))return e;t=mr(t,e);for(var s=-1,n=t.length,i=n-1,d=e;d!=null&&++s<n;){var l=fr(t[s]),S=o;if(l==="__proto__"||l==="constructor"||l==="prototype")return e;if(s!=i){var x=d[l];S=void 0,S===void 0&&(S=T(x)?x:wo(t[s+1])?[]:{})}Bo(d,l,S),d=d[l]}return e}function hr(e,t,o){return e==null?e:gr(e,t,o)}class _{constructor(t="NoName",o="#000000",a=[],s={}){this.id=`${t.substring(0,1).toLowerCase()}${t.substring(1)}`,this.name=t.match(/[A-Z][a-z]+/g).join(" "),this.color=o,this.blocks=a,this.menus=s;for(const n of this.blocks)n instanceof r&&hr(this,n.opcode.toString(),async i=>await n.run(t.toLowerCase(),i))}getInfo(){return{id:this.id,name:this.name,color1:this.color,color2:this.color,blocks:this.blocks,menus:this.menus}}}const G=[];for(const[e,t]of Object.entries(h.tabs)){let o;"menus"in t?o=new _(c.getMessage(e),t.color,t.blocks,t.menus):o=new _(c.getMessage(e),t.color,t.blocks),G.push(o)}G.forEach(e=>Scratch.extensions.register(e));
